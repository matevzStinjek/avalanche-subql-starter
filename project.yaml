specVersion: "1.0.0"

name: "avalanche-subql-starter"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-avalanche"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project can be use as a starting point for developing your new Avalanche SubQuery project"
repository: "https://github.com/subquery/avalanche-subql-starter"

schema:
  file: "./schema.graphql"

network:
  chainId: "mainnet"
  subnet: "C"
  endpoint: "https://avalanche.api.onfinality.io?apikey=ecfc3532-e59f-41cc-9760-dc23ad89e238"
  # endpoint: https://api.avax.network
  # endpoint:  https://api.avax-test.network
  # dictionary: https://api.subquery.network/sq/subquery/avalanche-dictionary

dataSources:
  - kind: avalanche/Runtime
    startBlock: 14625454 # Known event
    # startBlock: 13325661 # Contract created
    options:
      # Must be a key of assets
      abi: BetaSimpleFlatLostWorld
      address: "0x848697c66a7161ed9c4b9be1f59b83fd11524bbd"
    assets:
      BetaSimpleFlatLostWorld:
        file: "./abis/BetaSimpleFlatLostWorld.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleTransfer
          kind: avalanche/TransactionHandler
          filter:
            ## The function can either be the function fragment or signature
            # function: '0x095ea7b3'
            # function: '0x7ff36ab500000000000000000000000000000000000000000000000000000000'
            function: transferFrom(address from, address to, uint256 tokenId)
            # from: "0x60781C2586D68229fde47564546784ab3fACA982"
            # to: "0x60781C2586D68229fde47564546784ab3fACA982"
        - handler: handleTransfer
          kind: avalanche/TransactionHandler
          filter:
            function: safeTransferFrom(address from, address to, uint256 tokenId)
